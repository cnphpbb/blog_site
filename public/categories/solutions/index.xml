<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>solutions on DenysG的个人博客</title>
    <link>https://48474.net/categories/solutions/</link>
    <description>Recent content in solutions on DenysG的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jun 2020 04:25:15 +0800</lastBuildDate>
    
	<atom:link href="https://48474.net/categories/solutions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 ss 命令代替 netstat</title>
      <link>https://48474.net/post/ss-replace-netstat/</link>
      <pubDate>Wed, 03 Jun 2020 04:25:15 +0800</pubDate>
      
      <guid>https://48474.net/post/ss-replace-netstat/</guid>
      <description>ss 是Socket Statistics的缩写。
顾名思义，ss 命令可以用来获取socket统计信息，它可以显示和netstat类似的内容。但ss的优势在于它能够显示更多更详细的有关TCP和连接状态的信息，而且比netstat更快速更高效。
和netstat说再见的原因 当服务器的socket连接数量变得非常大时，无论是使用netstat命令还是直接cat /proc/net/tcp，执行速度都会很慢。可能你不会有切身的感受，但请相信我，当服务器维持的连接达到上万个的时候，使用netstat等于浪费 生命，而用ss才是节省时间。
天下武功唯快不破。ss快的秘诀在于，它利用到了TCP协议栈中tcp_diag。tcp_diag是一个用于分析统计的模块，可以获得Linux 内核中第一手的信息，这就确保了ss的快捷高效。当然，如果你的系统中没有tcp_diag，ss也可以正常运行，只是效率会变得稍慢。（但仍然比 netstat要快。）
用数据说话 为了让你更坚决的和netstat说再见，列举一些测试数据，以便证明ss的确名不虚传。
当服务器维持3万个socket连接，Admin需要计算具体的连接数量时，不同情况的耗时如下：
netstat -at | wc 耗时 15.60 秒 ss -atr | wc 耗时 5.40 秒（未利用tcp_diag） ss -atr | wc 耗时 0.47 秒（利用tcp_diag） 好马配上好鞍 几乎所有的Linux系统都会默认包含netstat命令，但并非所有系统都会默认包含ss命令。netstat 命令是 net-tools 工具集中的一员：
# apt-cache show net-tools Package: net-tools Version: 1.60+git20180626.aebd88e-1 而ss命令是iproute2工具集中的一员：
# apt-cache show iproute2 Package: iproute2 Version: 4.20.0-2 如果你无法使用ss命令，那么可能是缺少了 iproute2 ，需要安装一下：
# apt install -y iproute2 从某种意义上说，iproute2 工具集几乎可以替代掉 net-tools 工具集，具体的替代方案是这样的：</description>
    </item>
    
    <item>
      <title>VPS Debian8 删除一些没用的服务的方法</title>
      <link>https://48474.net/post/vps_debian_unremove_service/</link>
      <pubDate>Mon, 16 Jan 2017 13:18:39 +0800</pubDate>
      
      <guid>https://48474.net/post/vps_debian_unremove_service/</guid>
      <description>本人喜欢使用linux的debian发行版本。也用过其他的发行版本。
现在使用的vps是ufovps出售的香港云服务器。
安装的是linux的Debian8版本。
安装好后远程登陆vps后查看有如下几个服务已经安装并在运行。
   exim4 rpcbind nfs+portmap  以上这些服务我都不使用，需要关闭。方法如下：
删除 exim4 服务 exim4服务 开放 port :25 大家都知道这个端口做啥都吧！
$ apt-get purge --auto-remove exim4 exim4-base exim4-config exim4-daemon-light $ rm -rf /var/log/exim4/ 删除 rpcbind 服务 rpcbind 服务 此服务开启port :111 这个端口。
$ apt-get purge --auto-remove rpcbind 删除nfs服务 $ apt-get purge --auto-remove nfs-kernel-server nfs-common portmap 如果不删除只是关闭相关服务，可以如下执行
$ systemctl disable nfs-common $ systemctl disable rpcbind $ systemctl disable exim4 $ systemctl stop nfs-common $ systemctl stop rpcbind $ systemctl stop exim4  PS：几句废话。</description>
    </item>
    
    <item>
      <title>Error: /usr/local must be writable! 解决方法</title>
      <link>https://48474.net/post/brew_update_error_fix/</link>
      <pubDate>Mon, 26 Dec 2016 12:51:15 +0800</pubDate>
      
      <guid>https://48474.net/post/brew_update_error_fix/</guid>
      <description>今天在Mac下执行brew update时出现以下错误提示：
 $ brew update
Error: /usr/local must be writable!
 以前一直默认用的好好的,突然出现这种情况导致不能正常使用了。 按我习惯性的方法，修改下目录的权限吧
 $ sudo chmod -R g+w /usr/local
$ brew update
还是出现错误提示 Error: /usr/local must be writable!
 有点晕啦，怎么还是有问题呢？ 仔细想了下，自检以下吧。
 $ brew doctor
 上面是修改目录的写权限，现在修改目录的用户权限吧！！
 $ sudo chown -R $(whoami) /usr/local
 再次执行brew doctor, 正常啦！！！
再次执行brew update, 终于正常，正常啦！！！
总结一下：
 升级了macos后没执行brew doctor，导致brew 出现问题。 升级系统，一定要检测下第三方软件是否能正常工作。 检测工作没执行到底呀。  </description>
    </item>
    
  </channel>
</rss>