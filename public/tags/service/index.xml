<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>service on DenysG的个人博客</title>
    <link>https://48474.net/tags/service/</link>
    <description>Recent content in service on DenysG的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Oct 2015 18:18:56 +0800</lastBuildDate><atom:link href="https://48474.net/tags/service/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Service Interface的优缺点</title>
      <link>https://48474.net/post/service_interface_advantages_and_disadvantages/</link>
      <pubDate>Sat, 10 Oct 2015 18:18:56 +0800</pubDate>
      
      <guid>https://48474.net/post/service_interface_advantages_and_disadvantages/</guid>
      <description>使用 Service Interface 模式会导致下面的优缺点： 优点  服务接口机制与应用逻辑分隔。这种分隔使您能够轻松地添加新的接口以及更改基础应用程序的实现，同时对使用者的影响最小。 通过将服务接口代码与服务实现代码分隔开来，您就能够在不同层上部署这两部分代码，这样有可能提高解决方案的部署灵活性。  缺点  很多平台使公开应用程序功能变得很简单。但是，这可能会导致作出粒度方面的错误决定。如果接口粒度太细，可能会导致最后必须很多次调用服务，才能执行特定操作。您需要对服务接口进行相应设计，使其适合网络通信或过程外通信。 服务所提供的每个新增服务接口都会增加在更改服务所公开的功能时所需的工作量。 Service Interface 模式增加了复杂性和性能开销，这对于很简单的面向服务的应用程序来说可能不是很合适  </description>
    </item>
    
  </channel>
</rss>
